# Generated by Django 3.2.13 on 2023-05-06 13:37

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Compiler',
            fields=[
                ('compiler_id', models.AutoField(primary_key=True, serialize=False)),
                ('compiler', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Kernel',
            fields=[
                ('kernel_id', models.AutoField(primary_key=True, serialize=False)),
                ('kernel_name', models.CharField(max_length=100, unique=True)),
                ('sysctl', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50, null=True, unique=True), size=None)),
            ],
            options={
                'unique_together': {('kernel_name', 'sysctl')},
            },
        ),
        migrations.CreateModel(
            name='OsDistributor',
            fields=[
                ('os_distributor_id', models.AutoField(primary_key=True, serialize=False)),
                ('dist_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HardwareInfo',
            fields=[
                ('hardware_info_id', models.AutoField(primary_key=True, serialize=False)),
                ('cpu_brand', models.CharField(max_length=100, null=True)),
                ('hz', models.BigIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(10000000), django.core.validators.MinValueValidator(0)])),
                ('cpu_cores', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)])),
                ('total_memory', models.BigIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(10000000000), django.core.validators.MinValueValidator(0)])),
                ('total_swap', models.BigIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000000), django.core.validators.MinValueValidator(0)])),
                ('mounts', models.JSONField(null=True)),
                ('mounts_hash', models.CharField(max_length=256)),
                ('sysctl', models.JSONField(null=True)),
                ('sysctl_hash', models.CharField(max_length=256)),
            ],
            options={
                'unique_together': {('cpu_brand', 'hz', 'cpu_cores', 'total_memory', 'total_swap', 'mounts_hash', 'sysctl_hash')},
            },
        ),
        migrations.CreateModel(
            name='OsVersion',
            fields=[
                ('os_version_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100, null=True)),
                ('release', models.CharField(max_length=100, null=True)),
                ('codename', models.CharField(max_length=100, null=True)),
                ('dist_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributor', to='systems.osdistributor')),
            ],
            options={
                'unique_together': {('dist_id', 'description', 'release', 'codename')},
            },
        ),
        migrations.CreateModel(
            name='OsKernelVersion',
            fields=[
                ('os_kernel_version_id', models.AutoField(primary_key=True, serialize=False)),
                ('kernel_release', models.CharField(max_length=100, null=True)),
                ('kernel_version', models.CharField(max_length=100, null=True)),
                ('kernel_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributor', to='systems.kernel')),
            ],
            options={
                'unique_together': {('kernel_id', 'kernel_release', 'kernel_version')},
            },
        ),
    ]
