# Generated by Django 3.2.13 on 2022-05-07 18:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import rest_api.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('machines', '0001_initial'),
        ('postgres', '0001_initial'),
        ('systems', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GitRepo',
            fields=[
                ('git_repo_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=100)),
                ('owner', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RunLog',
            fields=[
                ('log_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(default='failed_run', max_length=100)),
                ('logmessage', models.CharField(max_length=500)),
                ('acknowledged', models.BooleanField(default=False)),
                ('machine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='log', to='machines.machine')),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('default_view', models.BooleanField(default=False)),
                ('ordering', models.IntegerField(null=True)),
                ('git_repo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runs.gitrepo')),
            ],
            options={
                'unique_together': {('name', 'git_repo')},
            },
        ),
        migrations.CreateModel(
            name='RunInfo',
            fields=[
                ('run_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('sysctl_raw', models.JSONField(null=True)),
                ('git_commit', models.CharField(max_length=100)),
                ('run_received_time', models.DateTimeField(blank=True, null=True, validators=[rest_api.validators.ValidateDate])),
                ('run_start_time', models.DateTimeField(blank=True, null=True, validators=[rest_api.validators.ValidateDate])),
                ('run_end_time', models.DateTimeField(blank=True, null=True, validators=[rest_api.validators.ValidateDate])),
                ('git_clone_log', models.TextField(blank=True, null=True)),
                ('git_clone_runtime', models.DurationField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('git_pull_runtime', models.DurationField(blank=True, null=True)),
                ('configure_log', models.TextField(blank=True, null=True)),
                ('configure_runtime', models.DurationField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('build_log', models.TextField(blank=True, null=True)),
                ('build_runtime', models.DurationField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('install_log', models.TextField(blank=True, null=True)),
                ('install_runtime', models.DurationField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('benchmark_log', models.TextField(blank=True, null=True)),
                ('benchmark', models.CharField(default='pgbench', max_length=100)),
                ('cleanup_log', models.TextField(blank=True, null=True)),
                ('cleanup_runtime', models.DurationField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('postgres_log', models.TextField(blank=True, null=True)),
                ('compiler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.compiler')),
                ('git_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runs.branch')),
                ('hardware_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.hardwareinfo')),
                ('machine_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='machines.machine')),
                ('os_kernel_version_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.oskernelversion')),
                ('os_version_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.osversion')),
                ('postgres_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='postgres.postgressettingsset')),
            ],
            options={
                'unique_together': {('machine_id', 'run_start_time')},
            },
        ),
    ]
